{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"lodash","data":{"isAsync":false}},{"name":"./LayoutType","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _ = _$$_REQUIRE(_dependencyMap[2], \"lodash\");\n\n  var LayoutType_1 = _$$_REQUIRE(_dependencyMap[3], \"./LayoutType\");\n\n  var LayoutTreeCrawler = function () {\n    function LayoutTreeCrawler(store, optionsProcessor) {\n      _classCallCheck(this, LayoutTreeCrawler);\n\n      this.store = store;\n      this.optionsProcessor = optionsProcessor;\n      this.crawl = this.crawl.bind(this);\n    }\n\n    _createClass(LayoutTreeCrawler, [{\n      key: \"crawl\",\n      value: function crawl(node) {\n        if (node.type === LayoutType_1.LayoutType.Component) {\n          this.handleComponent(node);\n        }\n\n        this.optionsProcessor.processOptions(node.data.options);\n        node.children.forEach(this.crawl);\n      }\n    }, {\n      key: \"handleComponent\",\n      value: function handleComponent(node) {\n        this.assertComponentDataName(node);\n        this.savePropsToStore(node);\n        this.applyStaticOptions(node);\n        node.data.passProps = undefined;\n      }\n    }, {\n      key: \"savePropsToStore\",\n      value: function savePropsToStore(node) {\n        this.store.setPropsForId(node.id, node.data.passProps);\n      }\n    }, {\n      key: \"isComponentWithOptions\",\n      value: function isComponentWithOptions(component) {\n        return component.options !== undefined;\n      }\n    }, {\n      key: \"applyStaticOptions\",\n      value: function applyStaticOptions(node) {\n        node.data.options = _.merge({}, this.staticOptionsIfPossible(node), node.data.options);\n      }\n    }, {\n      key: \"staticOptionsIfPossible\",\n      value: function staticOptionsIfPossible(node) {\n        var foundReactGenerator = this.store.getComponentClassForName(node.data.name);\n        var reactComponent = foundReactGenerator ? foundReactGenerator() : undefined;\n\n        if (reactComponent && this.isComponentWithOptions(reactComponent)) {\n          return _.isFunction(reactComponent.options) ? reactComponent.options(node.data.passProps || {}) : reactComponent.options;\n        }\n\n        return {};\n      }\n    }, {\n      key: \"assertComponentDataName\",\n      value: function assertComponentDataName(component) {\n        if (!component.data.name) {\n          throw new Error('Missing component data.name');\n        }\n      }\n    }]);\n\n    return LayoutTreeCrawler;\n  }();\n\n  exports.LayoutTreeCrawler = LayoutTreeCrawler;\n});","map":[[2,0,1,0],[8,0,2,0,"Object"],[8,2,2,0,"Object"],[8,8,2,6],[8,9,2,7,"defineProperty"],[8,23,2,0],[8,24,2,22,"exports"],[8,31,2,0],[8,33,2,31],[8,45,2,0],[8,47,2,45],[9,0,2,47,"value"],[9,4,2,47,"value"],[9,9,2,52],[9,11,2,54],[10,0,2,45],[10,3,2,0],[12,0,3,0],[12,6,3,6,"_"],[12,7,3,7],[12,10,3,10,"require"],[12,21,3,17],[12,50,3,0],[14,0,4,0],[14,6,4,6,"LayoutType_1"],[14,18,4,18],[14,21,4,21,"require"],[14,32,4,28],[14,67,4,0],[16,6,5,6,"LayoutTreeCrawler"],[16,23],[17,0,6,4],[17,31,6,16,"store"],[17,36,6,4],[17,38,6,23,"optionsProcessor"],[17,54,6,4],[17,56,6,41],[18,0,6,41],[20,0,7,8],[20,11,7,13,"store"],[20,16,7,8],[20,19,7,21,"store"],[20,24,7,8],[21,0,8,8],[21,11,8,13,"optionsProcessor"],[21,27,8,8],[21,30,8,32,"optionsProcessor"],[21,46,8,8],[22,0,9,8],[22,11,9,13,"crawl"],[22,16,9,8],[22,19,9,21],[22,24,9,26,"crawl"],[22,29,9,21],[22,30,9,32,"bind"],[22,34,9,21],[22,35,9,37],[22,39,9,21],[22,40,9,8],[23,0,10,5],[27,28,11,10,"node"],[27,32],[27,34,11,16],[28,0,12,8],[28,12,12,12,"node"],[28,16,12,16],[28,17,12,17,"type"],[28,21,12,12],[28,26,12,26,"LayoutType_1"],[28,38,12,38],[28,39,12,39,"LayoutType"],[28,49,12,26],[28,50,12,50,"Component"],[28,59,12,8],[28,61,12,61],[29,0,13,12],[29,15,13,17,"handleComponent"],[29,30,13,12],[29,31,13,33,"node"],[29,35,13,12],[30,0,14,9],[32,0,15,8],[32,13,15,13,"optionsProcessor"],[32,29,15,8],[32,30,15,30,"processOptions"],[32,44,15,8],[32,45,15,45,"node"],[32,49,15,49],[32,50,15,50,"data"],[32,54,15,45],[32,55,15,55,"options"],[32,62,15,8],[33,0,16,8,"node"],[33,8,16,8,"node"],[33,12,16,12],[33,13,16,13,"children"],[33,21,16,8],[33,22,16,22,"forEach"],[33,29,16,8],[33,30,16,30],[33,35,16,35,"crawl"],[33,40,16,8],[34,0,17,5],[37,38,18,20,"node"],[37,42],[37,44,18,26],[38,0,19,8],[38,13,19,13,"assertComponentDataName"],[38,36,19,8],[38,37,19,37,"node"],[38,41,19,8],[39,0,20,8],[39,13,20,13,"savePropsToStore"],[39,29,20,8],[39,30,20,30,"node"],[39,34,20,8],[40,0,21,8],[40,13,21,13,"applyStaticOptions"],[40,31,21,8],[40,32,21,32,"node"],[40,36,21,8],[41,0,22,8,"node"],[41,8,22,8,"node"],[41,12,22,12],[41,13,22,13,"data"],[41,17,22,8],[41,18,22,18,"passProps"],[41,27,22,8],[41,30,22,30,"undefined"],[41,39,22,8],[42,0,23,5],[45,39,24,21,"node"],[45,43],[45,45,24,27],[46,0,25,8],[46,13,25,13,"store"],[46,18,25,8],[46,19,25,19,"setPropsForId"],[46,32,25,8],[46,33,25,33,"node"],[46,37,25,37],[46,38,25,38,"id"],[46,40,25,8],[46,42,25,42,"node"],[46,46,25,46],[46,47,25,47,"data"],[46,51,25,42],[46,52,25,52,"passProps"],[46,61,25,8],[47,0,26,5],[50,45,27,27,"component"],[50,54],[50,56,27,38],[51,0,28,8],[51,15,28,15,"component"],[51,24,28,24],[51,25,28,25,"options"],[51,32,28,15],[51,37,28,37,"undefined"],[51,46,28,8],[52,0,29,5],[55,41,30,23,"node"],[55,45],[55,47,30,29],[56,0,31,8,"node"],[56,8,31,8,"node"],[56,12,31,12],[56,13,31,13,"data"],[56,17,31,8],[56,18,31,18,"options"],[56,25,31,8],[56,28,31,28,"_"],[56,29,31,29],[56,30,31,30,"merge"],[56,35,31,28],[56,36,31,36],[56,38,31,28],[56,40,31,40],[56,45,31,45,"staticOptionsIfPossible"],[56,68,31,40],[56,69,31,69,"node"],[56,73,31,40],[56,74,31,28],[56,76,31,76,"node"],[56,80,31,80],[56,81,31,81,"data"],[56,85,31,76],[56,86,31,86,"options"],[56,93,31,28],[56,94,31,8],[57,0,32,5],[60,46,33,28,"node"],[60,50],[60,52,33,34],[61,0,34,8],[61,12,34,14,"foundReactGenerator"],[61,31,34,33],[61,34,34,36],[61,39,34,41,"store"],[61,44,34,36],[61,45,34,47,"getComponentClassForName"],[61,69,34,36],[61,70,34,72,"node"],[61,74,34,76],[61,75,34,77,"data"],[61,79,34,72],[61,80,34,82,"name"],[61,84,34,36],[61,85,34,8],[62,0,35,8],[62,12,35,14,"reactComponent"],[62,26,35,28],[62,29,35,31,"foundReactGenerator"],[62,48,35,50],[62,51,35,53,"foundReactGenerator"],[62,70,35,72],[62,72,35,50],[62,75,35,77,"undefined"],[62,84,35,8],[64,0,36,8],[64,12,36,12,"reactComponent"],[64,26,36,26],[64,30,36,30],[64,35,36,35,"isComponentWithOptions"],[64,57,36,30],[64,58,36,58,"reactComponent"],[64,72,36,30],[64,73,36,8],[64,75,36,75],[65,0,37,12],[65,17,37,19,"_"],[65,18,37,20],[65,19,37,21,"isFunction"],[65,29,37,19],[65,30,37,32,"reactComponent"],[65,44,37,46],[65,45,37,47,"options"],[65,52,37,19],[65,56,37,58,"reactComponent"],[65,70,37,72],[65,71,37,73,"options"],[65,78,37,58],[65,79,37,81,"node"],[65,83,37,85],[65,84,37,86,"data"],[65,88,37,81],[65,89,37,91,"passProps"],[65,98,37,81],[65,102,37,104],[65,104,37,58],[65,105,37,19],[65,108,37,110,"reactComponent"],[65,122,37,124],[65,123,37,125,"options"],[65,130,37,12],[66,0,38,9],[68,0,39,8],[68,15,39,15],[68,17,39,8],[69,0,40,5],[72,46,41,28,"component"],[72,55],[72,57,41,39],[73,0,42,8],[73,12,42,12],[73,13,42,13,"component"],[73,22,42,22],[73,23,42,23,"data"],[73,27,42,13],[73,28,42,28,"name"],[73,32,42,8],[73,34,42,34],[74,0,43,12],[74,16,43,18],[74,20,43,22,"Error"],[74,25,43,18],[74,26,43,28],[74,55,43,18],[74,56,43,12],[75,0,44,9],[76,0,45,5],[82,0,47,0,"exports"],[82,2,47,0,"exports"],[82,9,47,7],[82,10,47,8,"LayoutTreeCrawler"],[82,27,47,0],[82,30,47,28,"LayoutTreeCrawler"],[82,47,47,0]]},"type":"js/module"}]}